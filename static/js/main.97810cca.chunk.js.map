{"version":3,"sources":["logo.svg","TodoContext.js","components/navbar.js","components/todo.js","components/todolist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TodoContext","createContext","TodoProvider","props","useState","Date","now","todos","setTodos","Provider","value","children","Navbar","menu","setMenu","useContext","setValue","className","role","onClick","aria-label","aria-expanded","data-target","aria-hidden","onSubmit","e","preventDefault","type","onChange","target","Todo","todo","done","toggleDone","bind","this","deleteTodo","TodoList","map","_todo","_todos","filter","length","key","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97810cca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {createContext, useState} from 'react'\n\nexport const TodoContext = createContext();\n\nexport const TodoProvider = (props) => {\n  const [todos, setTodos] = useState([\n    {\n      \"id\": Date.now(),\n      \"value\": \"Buy milk\",\n      \"done\": false\n    },\n    {\n      \"id\": Date.now() + 1,\n      \"value\": \"Play with doge\",\n      \"done\": false\n    }\n  ]);\n\n  return (\n    <TodoContext.Provider value={[todos, setTodos]}>\n      {props.children}\n    </TodoContext.Provider>\n  )\n}\n","import React, { useState, useContext } from 'react'\n\nimport { TodoContext } from \"../TodoContext\";\n\nexport default function Navbar() {\n  const [menu, setMenu] = useState(false)\n  const [todos, setTodos] = useContext(TodoContext)\n  const [value, setValue] = useState(\"\") //<= NEW\n\n  const addTodo = (e) => {\n    e.preventDefault()\n    setTodos([...todos, {\n      \"id\": Date.now(),\n      \"value\": value, //<= value\n      \"done\": false\n    }])\n    setValue(\"\") //<= clear value after submit\n  }\n\n  return (\n    <div className=\"navbar has-shadow\">\n     <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <p className=\"title\">Easy Todo</p>\n        </div>\n\n        <a role=\"button\" onClick={() => setMenu(!menu)} className={`navbar-burger burger ${menu ? \"is-active\" : \"\"}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <form onSubmit={addTodo} className=\"field has-addons\">\n        <p className=\"control is-expanded\">\n          <input value={value} type=\"text\" onChange={(e) => setValue(e.target.value)} className=\"input\" />\n        </p>\n        <p className=\"control\">\n          <button className=\"button is-info has-text-weight-bold\">\n            Add Todo\n          </button>\n        </p>\n      </form>\n\n      <div className={`navbar-menu ${menu ? \"is-active\" : \"\"}`}>\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"field has-addons\">\n              <p className=\"control is-expanded\">\n                <input type=\"text\" className=\"input\" />\n              </p>\n              <p className=\"control\">\n                <button className=\"button is-info has-text-weight-bold\">\n                  Add Todo\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Todo(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <p className={`title ${props.todo.done ? \"has-text-grey-light\" : \"\"}`}>{props.todo.value}</p>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div className=\"level-item buttons\">\n            <button onClick={props.toggleDone.bind(this, props.todo)} className={`button has-text-weight-bold ${props.todo.done ? \"is-warning\" : \"is-primary\"}`}>{props.todo.done ? \"Undo\" : \"Done\"}</button>\n              <button onClick={props.deleteTodo.bind(this, props.todo)} className=\"button is-danger has-text-weight-bold\">Delete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useContext} from 'react'\n\nimport { TodoContext } from \"../TodoContext\";\n\nimport Todo from './todo';\n\nexport default function TodoList() {\n  const [todos, setTodos] = useContext(TodoContext);\n\n  // toggleDone\n  const toggleDone = (todo) => {\n    todos.map(_todo => _todo === todo ? _todo.done = !todo.done : todo)\n    setTodos([...todos])\n  }\n  // delete\n  const deleteTodo = (todo) => {\n    const _todos = todos.filter(_todo => _todo !== todo)\n    setTodos(_todos)\n  }\n\n  // const todos = [\n  //   {\n  //     \"id\": Date.now(),\n  //     \"value\": \"Buy milk\",\n  //     \"done\": false\n  //   },\n  //   {\n  //     \"id\": Date.now()+1,\n  //     \"value\": \"Play with doge\",\n  //     \"done\": true\n  //   }\n  // ]\n\n  return (\n    <div>\n      <div className=\"hero is-info\">\n      \t<div className=\"hero-body has-text-centered\">\n      \t  <p className=\"title is-l\">{todos.length} Todos</p>\n      \t</div>\n      </div>\n\n      <section className=\"section\">\n        <div className=\"container\">\n          {todos.map(todo => (\n            <Todo key={todo.id} todo={todo} toggleDone={toggleDone} deleteTodo={deleteTodo}/>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { TodoProvider } from \"./TodoContext\";\nimport Navbar from './components/navbar';\nimport TodoList from './components/todolist';\n\n// import ableplayer from './components/ableplayer'\n\nfunction Player() {\n  return (\n    // <h1>Accessible Video Player</h1>\n    // <p>Demonstration of the accessible video player - <a href=\"https://github.com/ableplayer/ableplayer\">Able Player</a></p>\n\n    <div id=\"video-wrapper\">\n      <video id=\"video1\" preload=\"auto\" width=\"480\" height=\"360\" poster=\"https://ableplayer.github.io/ableplayer/media/wwa.jpg\" data-able-player>\n        <source type=\"video/mp4\" src=\"https://ableplayer.github.io/ableplayer/media/wwa.mp4\" data-desc-src=\"https://ableplayer.github.io/ableplayer/media/wwa_described.mp4\" data-sign-src=\"https://ableplayer.github.io/ableplayer/media/wwa_sign.mp4\"/>\n        <track kind=\"subtitles\" src=\"https://ableplayer.github.io/ableplayer/media/wwa_captions_es.vtt\" srcLang=\"es\" label=\"Espanol\"/>\n        <track kind=\"captions\" src=\"https://ableplayer.github.io/ableplayer/media/wwa_captions_en.vtt\" srcLang=\"en\" label=\"English\"/>\n        <track kind=\"descriptions\" src=\"https://ableplayer.github.io/ableplayer/media/wwa_description_en.vtt\" srcLang=\"en\"/>\n        <track kind=\"descriptions\" src=\"https://ableplayer.github.io/ableplayer/media/wwa_description_es.vtt\" srcLang=\"es\"/>\n          <track kind=\"chapters\" src=\"https://ableplayer.github.io/ableplayer/media/wwa_chapters_en.vtt\" srcLang=\"en\"/>\n          <track kind=\"chapters\" src=\"https://ableplayer.github.io/ableplayer/media/wwa_chapters_es.vtt\" srcLang=\"es\"/>\n      </video>\n    </div>\n    );\n}\n\nfunction Transcript() {\n  return (\n    <div id=\"transcript\" className=\"able-transcript-area\">\n\n      <div className=\"able-transcript\">\n        <h2>Interactive Transcript</h2>\n\n        <div className=\"able-desc\">\n          <span className=\"able-hidden\">Description: </span>\n          <span className=\"able-transcript-seekpoint\" data-start=\"5.59\" data-end=\"8.29\">\n            'Hello guys, my name is Victoria power.'\n          </span>\n        </div>\n\n\n      </div>\n    </div>\n    );\n}\n\nfunction App() {\n  return (\n    // <div>\n    //   <Player/>\n    //   <Transcript/>\n    // </div>\n\n    <TodoProvider>\n      <Navbar/>\n      <TodoList/>\n    </TodoProvider>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload. test TEST\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}